<template>
  <t-card>
    <t-space direction="vertical" style="width: 100%">
      <t-form v-show="showSearch" ref="queryRef" :data="queryParams" layout="inline" label-width="68px">
#foreach($column in $columns)
#if($column.isQuery())
#set($dictType=$column.dictType)
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.htmlType == "input" || $column.htmlType == "textarea")
        <t-form-item label="${comment}" name="${column.javaField}">
          <t-input v-model="queryParams.${column.javaField}" placeholder="请输入${comment}" clearable @enter="handleQuery" />
        </t-form-item>
#elseif(($column.htmlType == "select" || $column.htmlType == "radio") && "" != $dictType)
        <t-form-item label="${comment}" name="${column.javaField}">
          <t-select v-model="queryParams.${column.javaField}" placeholder="请选择${comment}" clearable>
            <t-option
              v-for="dict in ${dictType}"
              :key="dict.value"
              :label="dict.label"
              :value="dict.value"
            />
          </t-select>
        </t-form-item>
#elseif(($column.htmlType == "select" || $column.htmlType == "radio") && $dictType)
        <t-form-item label="${comment}" name="${column.javaField}">
          <t-select v-model="queryParams.${column.javaField}" placeholder="请选择${comment}" clearable>
            <t-option label="请选择字典生成" value="" />
          </t-select>
        </t-form-item>
#elseif($column.htmlType == "datetime" && $column.queryType != "BETWEEN")
        <t-form-item label="${comment}" name="${column.javaField}">
          <t-date-picker
            v-model="queryParams.${column.javaField}"
            allow-input
            clearable
            placeholder="请选择${comment}"
          />
        </t-form-item>
#elseif($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
        <t-form-item label="${comment}">
          <t-date-range-picker
            v-model="dateRange${AttrName}"
            style="width: 240px"
            allow-input
            clearable
            separator="-"
            :placeholder="['开始日期', '结束日期']"
          />
        </t-form-item>
#end
#end
#end
        <t-form-item label-width="0px">
          <t-button theme="primary" @click="handleQuery">
            <template #icon> <search-icon /></template>
            搜索
          </t-button>
          <t-button theme="default" @click="resetQuery">
            <template #icon> <refresh-icon /></template>
            重置
          </t-button>
        </t-form-item>
      </t-form>

      <t-table
        v-model:column-controller-visible="columnControllerVisible"
        :loading="loading"
        hover
        row-key="${pkColumn.javaField}"
        :data="${businessName}List"
        :columns="columns"
        :selected-row-keys="ids"
        select-on-row-click
        :pagination="pagination"
        :column-controller="{
          hideTriggerButton: true,
        }"
        #if($hasSorting)
        :sort="sort"
        show-sort-column-bg-color
        @sort-change="handleSortChange"
        #end
        @select-change="handleSelectionChange"
      >
        <template #topContent>
          <t-row>
            <t-col flex="auto">
              <t-button v-hasPermi="['${moduleName}:${businessName}:add']" theme="primary" @click="handleAdd">
                <template #icon> <add-icon /></template>
                新增
              </t-button>
              <t-button
                v-hasPermi="['${moduleName}:${businessName}:edit']"
                theme="default"
                variant="outline"
                :disabled="single"
                @click="handleUpdate()"
              >
                <template #icon> <edit-icon /> </template>
                修改
              </t-button>
              <t-button
                v-hasPermi="['${moduleName}:${businessName}:remove']"
                theme="danger"
                variant="outline"
                :disabled="multiple"
                @click="handleDelete()"
              >
                <template #icon> <delete-icon /> </template>
                删除
              </t-button>
              <t-button v-hasPermi="['${moduleName}:${businessName}:export']" theme="default" variant="outline" @click="handleExport">
                <template #icon> <download-icon /> </template>
                导出
              </t-button>
            </t-col>
            <t-col flex="none">
              <t-button theme="default" shape="square" variant="outline" @click="showSearch = !showSearch">
                <template #icon> <search-icon /> </template>
              </t-button>
              <t-button theme="default" variant="outline" @click="columnControllerVisible = true">
                <template #icon> <setting-icon /> </template>
                列配置
              </t-button>
            </t-col>
          </t-row>
        </template>
#foreach($column in $columns)
#set($javaField=$column.javaField)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.isList() && $column.htmlType == "imageUpload")
        <template #${javaField}="{ row }">
          <image-preview :src="row.${javaField}" :width="60" :height="60" />
        </template>
#elseif($column.isList() && $column.dictType && "" != $column.dictType)
        <template #${javaField}="{ row }">
#if($column.htmlType == "checkbox")
          <dict-tag :options="${column.dictType}" :value="row.${javaField} ? row.${javaField}.split(',') : []" />
#else
          <dict-tag :options="${column.dictType}" :value="row.${javaField}" />
#end
        </template>
#end
#end
        <template #operation="{ row }">
          <t-space :size="8" break-line>
            <t-link v-hasPermi="['${moduleName}:${businessName}:query']" theme="primary" hover="color" @click.stop="handleDetail(row)">
              <browse-icon />详情
            </t-link>
            <t-link v-hasPermi="['${moduleName}:${businessName}:edit']" theme="primary" hover="color" @click.stop="handleUpdate(row)">
              <edit-icon />修改
            </t-link>
            <t-link v-hasPermi="['${moduleName}:${businessName}:remove']" theme="danger" hover="color" @click.stop="handleDelete(row)">
              <delete-icon />删除
            </t-link>
          </t-space>
        </template>
      </t-table>
    </t-space>

    <!-- 添加或修改${functionName}对话框 -->
    <t-dialog
      v-model:visible="open"
      :close-on-overlay-click="false"
      :header="title"
      width="500px"
      attach="body"
      :confirm-btn="{
        content: '确 定',
        theme: 'primary',
        loading: buttonLoading,
      }"
      @confirm="onConfirm"
    >
      <t-form
        ref="${businessName}Ref"
        label-align="right"
        :data="form"
        :rules="rules"
        label-width="calc(5em + 24px)"
        scroll-to-first-error="smooth"
        @submit="submitForm"
      >
#foreach($column in $columns)
#set($field=$column.javaField)
#if(($column.isInsert() || $column.isEdit()) && !$column.isPk())
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#set($dictType=$column.dictType)
#if($column.htmlType == "input")
        <t-form-item label="${comment}" name="${field}">
          <t-input v-model="form.${field}" placeholder="请输入${comment}" clearable />
        </t-form-item>
#elseif($column.htmlType == "imageUpload")
        <t-form-item label="${comment}" name="${field}">
          <image-upload v-model="form.${field}" :limit="1" />
        </t-form-item>
#elseif($column.htmlType == "fileUpload")
        <t-form-item label="${comment}" name="${field}">
          <file-upload v-model="form.${field}" />
        </t-form-item>
#elseif($column.htmlType == "editor")
        <t-form-item label="${comment}" name="${field}">
          <editor v-model="form.${field}" />
        </t-form-item>
#elseif($column.htmlType == "select" && "" != $dictType)
        <t-form-item label="${comment}" name="${field}">
          <t-select v-model="form.${field}" placeholder="请选择${comment}" clearable>
            <t-option
              v-for="dict in ${dictType}"
              :key="dict.value"
              :label="dict.label"
#if($column.javaType == "Integer" || $column.javaType == "Long")
              :value="parseInt(dict.value)"
#else
              :value="dict.value"
#end
            />
          </t-select>
        </t-form-item>
#elseif($column.htmlType == "select" && $dictType)
        <t-form-item label="${comment}" name="${field}">
          <t-select v-model="form.${field}" placeholder="请选择${comment}" clearable>
            <t-option label="请选择字典生成" value="" />
          </t-select>
        </t-form-item>
#elseif($column.htmlType == "checkbox" && "" != $dictType)
        <t-form-item label="${comment}" name="${field}">
          <t-checkbox-group v-model="form.${field}">
            <t-checkbox
              v-for="dict in ${dictType}"
              :key="dict.value"
              :label="dict.label"
              :value="dict.value"
            />
          </t-checkbox-group>
        </t-form-item>
#elseif($column.htmlType == "checkbox" && $dictType)
        <t-form-item label="${comment}" name="${field}">
          <t-checkbox-group v-model="form.${field}">
            <t-checkbox>请选择字典生成</t-checkbox>
          </t-checkbox-group>
        </t-form-item>
#elseif($column.htmlType == "radio" && "" != $dictType)
        <t-form-item label="${comment}" name="${field}">
          <t-radio-group v-model="form.${field}">
            <t-radio
              v-for="dict in ${dictType}"
              :key="dict.value"
#if($column.javaType == "Integer" || $column.javaType == "Long")
              :value="parseInt(dict.value)"
#else
              :value="dict.value"
#end
            >{{dict.label}}</t-radio>
          </t-radio-group>
        </t-form-item>
#elseif($column.htmlType == "radio" && $dictType)
        <t-form-item label="${comment}" name="${field}">
          <t-radio-group v-model="form.${field}">
            <t-radio value="1">请选择字典生成</t-radio>
          </t-radio-group>
        </t-form-item>
#elseif($column.htmlType == "datetime")
        <t-form-item label="${comment}" name="${field}">
          <t-date-picker
            v-model="form.${field}"
            enable-time-picker
            allow-input
            clearable
            placeholder="请选择${comment}"
          />
        </t-form-item>
#elseif($column.htmlType == "textarea")
        <t-form-item label="${comment}" name="${field}">
          <t-textarea v-model="form.${field}" placeholder="请输入${comment}" />
        </t-form-item>
#end
#end
#end
      </t-form>
    </t-dialog>

    <!-- ${functionName}详情 -->
    <t-dialog v-model:visible="openView" header="${functionName}详情" width="700px" attach="body" :footer="false">
      <t-loading :loading="openViewLoading">
        <t-form label-align="right" colon label-width="calc(5em + 24px)">
          <t-row :gutter="[0, 20]">
#foreach($column in $columns)
#set($javaField=$column.javaField)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.isDetail() && $column.htmlType == "imageUpload")
            <t-col :span="6">
              <t-form-item label="${comment}">
                <image-preview :src="form.${javaField}" :width="60" :height="60" />
              </t-form-item>
            </t-col>
#elseif($column.isList() && $column.htmlType == "datetime")
            <t-col :span="6">
              <t-form-item label="${comment}">{{ parseTime(form.${javaField}) }}</t-form-item>
            </t-col>
#elseif($column.isDetail() && $column.dictType && "" != $column.dictType)
            <t-col :span="6">
              <t-form-item label="${comment}">
#if($column.htmlType == "checkbox")
                <dict-tag :options="${column.dictType}" :value="form.${javaField} ? form.${javaField}.split(',') : []" />
#else
                <dict-tag :options="${column.dictType}" :value="form.${javaField}" />
#end
              </t-form-item>
            </t-col>
#elseif($column.isDetail() && $column.htmlType == "textarea")
            <t-col :span="12">
              <t-form-item label="${comment}">{{ form.${javaField} }}</t-form-item>
            </t-col>
#elseif($column.isDetail() && $column.htmlType == "editor")
            <t-col :span="12">
              <t-form-item label="${comment}"><div v-html="form.${javaField}"></div></t-form-item>
            </t-col>
#elseif($column.isDetail())
            <t-col :span="6">
              <t-form-item label="${comment}">{{ form.${javaField} }}</t-form-item>
            </t-col>
#end
#end
          </t-row>
        </t-form>
      </t-loading>
    </t-dialog>
  </t-card>
</template>
<script lang="ts">
export default {
  name: '${BusinessName}',
};
</script>
<script lang="ts" setup>
import {
  AddIcon,
  BrowseIcon,
  DeleteIcon,
  DownloadIcon,
  EditIcon,
  RefreshIcon,
  SearchIcon,
  SettingIcon,
} from 'tdesign-icons-vue-next';
import { FormInstanceFunctions, FormRule, PageInfo, PrimaryTableCol, SubmitContext#if($hasSorting), TableSort#end } from 'tdesign-vue-next';
import { computed, getCurrentInstance, ref } from 'vue';

import { list${BusinessName}, get${BusinessName}, del${BusinessName}, add${BusinessName}, update${BusinessName} } from '@/api/${moduleName}/${businessName}';
import { #if(!$useBO || !$useQuery || !$useVO)${ClassName}#if($useBO || $useQuery || $useVO), #end#end#if($useBO)${ClassName}Form#if($useQuery || $useVO), #end#end#if($useQuery)${ClassName}Query#if($useVO), #end#end#if($useVO)${ClassName}Vo#end } from '@/api/${moduleName}/model/${businessName}Model';
#foreach($column in $columns)
#if($column.htmlType == "editor")
import Editor from '@/components/editor/index.vue';
#end
#end

#if($useVO)
#set($vo="${ClassName}Vo")
#else
#set($vo=$ClassName)
#end
#if($useQuery)
#set($query="${ClassName}Query")
#else
#set($query=$ClassName)
#end
#if($useBO)
#set($bo="${ClassName}Form")
#else
#set($bo=$ClassName)
#end
const { proxy } = getCurrentInstance();
#if(${dicts} != '')
#set($dictsNoSymbol=$dicts.replace("'", ""))
const { ${dictsNoSymbol} } = proxy.useDict(${dicts});
#end

const ${businessName}List = ref<${vo}[]>([]);
const ${businessName}Ref = ref<FormInstanceFunctions>(null);
const open = ref(false);
const openView = ref(false);
const openViewLoading = ref(false);
const buttonLoading = ref(false);
const loading = ref(false);
const columnControllerVisible = ref(false);
const showSearch = ref(true);
const ids = ref([]);
const single = ref(true);
const multiple = ref(true);
const total = ref(0);
const title = ref('');
#if($hasSorting)
const sort = ref<TableSort>(null);
#end
#foreach ($column in $columns)
#if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
const dateRange${AttrName} = ref([]);
#end
#end

// 校验规则
const rules = ref<Record<string, Array<FormRule>>>({
#foreach ($column in $columns)
#if($column.isInsert() || $column.isEdit())
#if($column.isRequired())
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
  $column.javaField: [{ required: true, message: '$comment不能为空', trigger: #if($column.htmlType == "select")'blur'#else'blur'#end }],
#end
#end
#end
});
// 列显隐信息
const columns = ref<Array<PrimaryTableCol>>([
  { title: `选择列`, colKey: 'row-select', type: 'multiple', width: 50, align: 'center' },
#foreach($column in $columns)
#set($javaField=$column.javaField)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.isPk())
#elseif($column.isList() && $column.htmlType == "datetime")
  { title: `${comment}`, colKey: '${javaField}', align: 'center', width: 180#if($column.isSorting()), sorter: true#end },
#elseif($column.isList() && $column.htmlType == "imageUpload")
  { title: `${comment}`, colKey: '${javaField}', align: 'center', width: 100#if($column.isSorting()), sorter: true#end },
#elseif($column.isList() && $column.htmlType == "textarea")
  { title: `${comment}`, colKey: '${javaField}', align: 'center', ellipsis: true#if($column.isSorting()), sorter: true#end },
#elseif($column.isList() && "" != $javaField)
  { title: `${comment}`, colKey: '${javaField}', align: 'center'#if($column.isSorting()), sorter: true#end },
#end
#end
  { title: `操作`, colKey: 'operation', align: 'center', width: 180#if($column.isSorting()), sorter: true#end },
]);
// 提交表单对象
const form = ref<#if($useVO && $useBO)$vo & $bo#elseif($useVO)$vo#elseif($useBO)$bo#else$ClassName#end>({});
// 查询对象
const queryParams = ref<${query}>({
  pageNum: 1,
  pageSize: 10,
#foreach ($column in $columns)
#if($column.isQuery())
  $column.javaField: undefined,
#end
#end
});

// 分页
const pagination = computed(() => {
  return {
    current: queryParams.value.pageNum,
    pageSize: queryParams.value.pageSize,
    total: total.value,
    showJumper: true,
    onChange: (pageInfo: PageInfo) => {
      queryParams.value.pageNum = pageInfo.current;
      queryParams.value.pageSize = pageInfo.pageSize;
      getList();
    },
  };
});

/** 查询${functionName}列表 */
function getList() {
  loading.value = true;
#foreach ($column in $columns)
#if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
  proxy.addDateRange(queryParams.value, dateRange${AttrName}.value, '${AttrName}');
#end
#end
  list${BusinessName}(queryParams.value)
    .then((response) => {
      ${businessName}List.value = response.rows;
      total.value = response.total;
    })
    .finally(() => (loading.value = false));
}

// 表单重置
function reset() {
  form.value = {
#foreach ($column in $columns)
#if($column.isInsert() || $column.isEdit())
#if($column.htmlType == "checkbox")
    $column.javaField: []#if($foreach.count != $columns.size()),#end
#end
#end
#end
  };
  proxy.resetForm('${businessName}Ref');
}

/** 搜索按钮操作 */
function handleQuery() {
  queryParams.value.pageNum = 1;
  getList();
}

/** 重置按钮操作 */
function resetQuery() {
#foreach ($column in $columns)
#if($column.htmlType == "datetime" && $column.queryType == "BETWEEN")
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
  dateRange${AttrName}.value = [];
#end
#end
  proxy.resetForm('queryRef');
#if($hasSorting)
  queryParams.value.pageNum = 1;
  handleSortChange(null);
#else
  handleQuery();
#end
}

#if($hasSorting)
/** 排序触发事件 */
function handleSortChange(value?: TableSort) {
  sort.value = value;
  if (Array.isArray(value)) {
    queryParams.value.orderByColumn = value.map((item) => item.sortBy).join(',');
    queryParams.value.isAsc = value.map((item) => (item.descending ? 'descending' : 'ascending')).join(',');
  } else {
    queryParams.value.orderByColumn = value?.sortBy;
    queryParams.value.isAsc = value?.descending ? 'descending' : 'ascending';
  }
  getList();
}

#end
/** 多选框选中数据 */
function handleSelectionChange(selection: Array<string | number>) {
  ids.value = selection;
  single.value = selection.length !== 1;
  multiple.value = !selection.length;
}

/** 新增按钮操作 */
function handleAdd() {
  reset();
  open.value = true;
  title.value = '添加${functionName}';
}

/** 详情按钮操作 */
function handleDetail(row: ${vo}) {
  reset();
  openView.value = true;
  openViewLoading.value = true;
  const ${pkColumn.javaField} = row.${pkColumn.javaField} || ids.value.at(0);
  get${BusinessName}(${pkColumn.javaField}).then((response) => {
    form.value = response.data;
    openViewLoading.value = false;
  });
}

/** 修改按钮操作 */
function handleUpdate(row?: ${vo}) {
  buttonLoading.value = true;
  reset();
  open.value = true;
  title.value = '修改${functionName}';
  const ${pkColumn.javaField} = row?.${pkColumn.javaField} || ids.value.at(0);
  get${BusinessName}(${pkColumn.javaField}).then((response) => {
    buttonLoading.value = false;
    form.value = response.data;
#foreach ($column in $columns)
#if($column.htmlType == "checkbox")
    form.value.$column.javaField = form.value.${column.javaField}.split(",");
#end
#end
  });
}

/** 提交按钮 */
function onConfirm() {
  ${businessName}Ref.value.submit();
}

/** 提交表单 */
function submitForm({ validateResult, firstError }: SubmitContext) {
  if (validateResult === true) {
    buttonLoading.value = true;
#foreach ($column in $columns)
#if($column.htmlType == "checkbox")
    form.value.$column.javaField = form.value.${column.javaField}.join(",");
#end
#end
    const msgLoading = proxy.$modal.msgLoading('提交中...');
    if (form.value.${pkColumn.javaField}) {
      update${BusinessName}(form.value)
        .then(() => {
          proxy.$modal.msgSuccess('修改成功');
          open.value = false;
          getList();
        })
        .finally(() => {
          buttonLoading.value = false;
          proxy.$modal.msgClose(msgLoading);
        });
    } else {
      add${BusinessName}(form.value)
        .then(() => {
          proxy.$modal.msgSuccess('新增成功');
          open.value = false;
          getList();
        })
        .finally(() => {
          buttonLoading.value = false;
          proxy.$modal.msgClose(msgLoading);
        });
    }
  } else {
    proxy.$modal.msgError(firstError);
  }
}

/** 删除按钮操作 */
function handleDelete(row?: ${vo}) {
#if(${pkColumn.javaField} == 'id')
#set($delIds = '$' + ${pkColumn.javaField} + 's')
#else
#set($delIds = ${pkColumn.javaField} + 's')
#end
  const $delIds = row?.${pkColumn.javaField} || ids.value;
  proxy.#[[$modal]]#.confirm(`是否确认删除${functionName}编号为${${delIds}}的数据项？`, () => {
    const msgLoading = proxy.$modal.msgLoading('正在删除中...');
    return del${BusinessName}($delIds)
      .then(() => {
        getList();
        proxy.$modal.msgSuccess('删除成功');
      })
      .finally(() => {
        proxy.$modal.msgClose(msgLoading);
      });
  });
}

/** 导出按钮操作 */
function handleExport() {
  proxy.download(
    '${moduleName}/${businessName}/export',
    {
      ...queryParams.value,
    },
    `${businessName}_#[[${new Date().getTime()}]]#.xlsx`,
  );
}

getList();
</script>
