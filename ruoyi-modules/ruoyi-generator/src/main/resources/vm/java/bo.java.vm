package ${packageName}.domain.bo;

import ${packageName}.domain.${ClassName};
import org.dromara.common.mybatis.core.domain.BaseEntity;
import org.dromara.common.core.validate.AddGroup;
import org.dromara.common.core.validate.EditGroup;
import io.github.linpeilie.annotations.AutoMapper;
import lombok.Data;
import lombok.EqualsAndHashCode;
import jakarta.validation.constraints.*;
#foreach ($import in $importList)
import ${import};
#end

import java.util.Date;
import java.io.Serial;
#if($isUseQuery || !$isUseQueryMethod)
import java.io.Serializable;
#end

/**
 * ${functionName}业务对象 ${tableName}
 *
 * @author ${author}
 * @date ${datetime}
 */
@Data
@AutoMapper(target = ${ClassName}.class, reverseConvertGenerate = false)
public class ${ClassName}Bo#if(!$isUseQuery && $isUseQueryMethod) extends BaseEntity#else implements Serializable#end {

    @Serial
    private static final long serialVersionUID = 1L;

#foreach ($column in $columns)
#if(($column.isPk() || $column.isInsert() || $column.isEdit()))
    /**
     * $column.columnComment
     */
#if($column.isRequired())
#set($Group0 = [])
#if($column.isInsert() && $Group0.add('AddGroup.class'))#end
#if(($column.isEdit() || $column.isPk()) && $Group0.add('EditGroup.class'))#end
#set($Group = $StringUtils.join($Group0, ", "))
#if($column.javaType == 'String')
    @NotBlank(message = "$column.columnComment不能为空"#if($Group), groups = {${Group}}#end)
#else
    @NotNull(message = "$column.columnComment不能为空"#if($Group), groups = {${Group}}#end)
#end
#end
    private $column.javaType $column.javaField;

#end
#end
}
